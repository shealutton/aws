AWSTemplateFormatVersion: "2010-09-09"
Description: "AWS CloudFormation Template for Root-access account alerts using Lambda."

Parameters:

  S3Bucket:
    Description: "Name of the bucket where the code of Lambda function is stored."
    Type: String
  S3Key: 
    Description: "Name of the zip file which contains the code of Lambda function."
    Type: String
  NotificationsEmail: 
    Description: "Email address to notify."
    Type: String

Resources:

  Topic:
    Type: "AWS::SNS::Topic"
    Properties:
      Subscription: #subscription defined inline
        -
          Endpoint:
            Ref: NotificationsEmail
          Protocol: email
      TopicName: "RootAccessNotification"

  RootNotificationFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Ref S3Key
      Handler: "LambdaRootAccessNotification.lambda_handler"
      Runtime: python2.7
      Timeout: 30
      Role: !GetAtt
        - LambdaExecutionRole
        - Arn

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - s3:GetObject
            Resource: "arn:aws:s3:::*"
          - Effect: Allow
            Action:
            - sns:Publish
            - sns:Subscribe
            Resource: "arn:aws:sns:*:*:*"
